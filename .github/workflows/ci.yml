name: CI

on:
  push:
    branches: [ main, beta ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # Use npm in CI for maximum reliability
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Build
      run: npm run build

  publish:
    runs-on: ubuntu-latest
    # Only run when a GitHub release is published
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    # Extract version from GitHub release tag
    - name: Update package.json version
      run: |
        RELEASE_VERSION=${GITHUB_REF#refs/tags/v}
        echo "Release version: $RELEASE_VERSION"
        npm version $RELEASE_VERSION --no-git-tag-version --allow-same-version
    
    - name: Run tests before publish
      run: npm test
    
    - name: Build before publish
      run: npm run build
    
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}